library(data.table)
annot <- read.delim("/labs/csbig/regulaciontrans/distance-analysis/Biomart_EnsemblG94_GRCh38_p12.txt", stringsAsFactors = F,
col.names = c("ensemblID", "chr", "start", "end", "GC",  "type", "symbol") )
annot <- annot[!duplicated(annot$ensemblID), ]
annot <- annot[!is.na(annot$ensemblID), ]
rownames(annot) <- annot$ensemblID
chrs <- c(as.character(1:22), "X")
type <- "kidney"
conditions <- c("healthy", "cancer")
setwd(paste0("/labs/csbig/regulaciontrans/", type, "/networks"))
cond <- conditions[2]
network <- fread(file = paste0(type, "-", cond, "-matrix.adj"), header = T, sep = "\t", nThread = 5)
network[1:5, 1:5]
annot.ok <- annot[colnames(network),]
chr <- chrs[1]
genes.annot <- annot.ok[annot.ok$chr == chr, ]
genes <- genes.annot$ensemblID
chr <- chrs[22]
genes.annot <- annot.ok[annot.ok$chr == chr, ]
genes <- genes.annot$ensemblID
ngenes <- length(genes)
i <- 1
library(data.table)
annot <- read.delim("/labs/csbig/regulaciontrans/distance-analysis/Biomart_EnsemblG94_GRCh38_p12.txt", stringsAsFactors = F,
col.names = c("ensemblID", "chr", "start", "end", "GC",  "type", "symbol") )
annot <- annot[!is.na(annot$ensemblID), ]
annot <- annot[!duplicated(annot$ensemblID), ]
rownames(annot) <- annot$ensemblID
chrs <- c(as.character(1:22), "X")
type <- "kidney"
conditions <- c("healthy", "cancer")
setwd(paste0("/labs/csbig/regulaciontrans/", type, "/networks"))
cond <- conditions[2]
MImatrix <- fread(file = paste0(type, "-", cond, "-matrix.adj"), header = T, sep = "\t", nThread = 5)
MImatrix <- data.matrix(MImatrix)
rownames(MImatrix) = colnames(MImatrix)
annot.ok <- annot[colnames(MImatrix),]
chr <- chrs[22]
cat("Working with chromosome", chr, "\n")
genes.annot <- annot.ok[annot.ok$chr == chr, ]
genes <- genes.annot$ensemblID
ngenes <- length(genes)
i <- 1
gene1 <- genes[i]
other.genes <- genes[(i+1):ngenes]
max(genes.annot[gene2, "start"], genes.annot[gene1, "start"]) - min(genes.annot[gene1, "start"], genes.annot[gene2, "start"])
gene2 <- other.genes[1]
max(genes.annot[gene2, "start"], genes.annot[gene1, "start"]) - min(genes.annot[gene1, "start"], genes.annot[gene2, "start"])
max(MImatrix[gene1, gene2], MImatrix[gene2, gene1],  na.rm = T)
chrvals <- parallel::mclapply(X = 1:(ngenes-1), mc.cores = 6,  mc.cleanup = T, FUN = function(i) {
#chrvals <- lapply(X = 1:(ngenes-1),  FUN = function(i) {
gene1 <- genes[i]
other.genes <- genes[(i+1):ngenes]
mivals <- lapply(X = other.genes,
FUN = function(gene2) {
data.frame(source = gene1, target = gene2,
distance = max(genes.annot[gene2, "start"], genes.annot[gene1, "start"]) - min(genes.annot[gene1, "start"], genes.annot[gene2, "start"]),
mi = max(MImatrix[gene1, gene2], MImatrix[gene2, gene1],  na.rm = T))
})
plyr::ldply(mivals)
})
chrdf <- plyr::ldply(chrvals)
head(chrdf)
chrdf$chr <- chr
write.table(chrdf, file =  paste("../intra/", cond, "/chr_", chr, "_distance_mi.txt", sep = ""),
row.names = F, col.names = T, sep = "\t", quote = F)
condvals <- lapply(X = chrs, FUN = function(chr) {
cat("Working with chromosome", chr, "\n")
genes.annot <- annot.ok[annot.ok$chr == chr, ]
genes <- genes.annot$ensemblID
ngenes <- length(genes)
chrvals <- parallel::mclapply(X = 1:(ngenes-1), mc.cores = 6,  mc.cleanup = T, FUN = function(i) {
#chrvals <- lapply(X = 1:(ngenes-1),  FUN = function(i) {
gene1 <- genes[i]
other.genes <- genes[(i+1):ngenes]
mivals <- lapply(X = other.genes,
FUN = function(gene2) {
data.frame(source = gene1, target = gene2,
distance = max(genes.annot[gene2, "start"], genes.annot[gene1, "start"]) - min(genes.annot[gene1, "start"], genes.annot[gene2, "start"]),
mi = max(MImatrix[gene1, gene2], MImatrix[gene2, gene1],  na.rm = T))
})
plyr::ldply(mivals)
})
chrdf <- plyr::ldply(chrvals)
chrdf$chr <- chr
write.table(chrdf, file =  paste("../intra/", cond, "/chr_", chr, "_distance_mi.txt", sep = ""),
row.names = F, col.names = T, sep = "\t", quote = F)
return(chrdf)
})
chrdf <- plyr::ldply(chrvals)
chrdf$chr <- chr
write.table(chrdf, file =  paste("../intra/", cond, "/chr_", chr, "_distance_mi.txt", sep = ""),
row.names = F, col.names = T, sep = "\t", quote = F)
conddf <- plyr::ldply(condvals)
conddf$cond <- cond
cat("Saving file.\n")
fwrite(conddf, file =  paste("intra/", cond,"_all_distance_mi.txt", sep = ""),
row.names = F, col.names = T, sep = "\t", nThread = 5)
fwrite(conddf, file =  paste("../intra/", cond,"_all_distance_mi.txt", sep = ""),
row.names = F, col.names = T, sep = "\t", nThread = 5)
